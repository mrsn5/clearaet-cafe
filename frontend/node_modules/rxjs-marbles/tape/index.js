"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var tape = require("tape");
var cases_1 = require("../cases");
var configuration_1 = require("../configuration");
var fake_1 = require("../fake");
var marbles_1 = require("../marbles");
__export(require("../configuration"));
__export(require("../expect"));
__export(require("../fake"));
function configure(configuration) {
    var factory = function (t) { return ({
        assert: t.ok.bind(t),
        assertDeepEqual: t.deepEqual.bind(t)
    }); };
    var configured = marbles_1.configure(function (t) { return (__assign({}, configuration, factory(t))); });
    var marbles = configured.marbles;
    function cases(name, func, cases) {
        cases_1._cases(function (c) {
            var t = c.only ? tape.only : c.skip ? tape.skip : tape;
            t(name + " / " + c.name, marbles(function (m, t) { return func(m, c, t); }));
        }, cases);
    }
    return { cases: cases, marbles: marbles };
}
exports.configure = configure;
var _a = configure(configuration_1.defaults()), cases = _a.cases, marbles = _a.marbles;
exports.cases = cases;
exports.marbles = marbles;
function fakeSchedulers(fakeTest) {
    return fake_1.fakeSchedulers(fakeTest);
}
exports.fakeSchedulers = fakeSchedulers;
