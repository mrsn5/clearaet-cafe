import { argsSymbol } from "./args";
import { assertArgs, assertSubscriptions } from "./assert";
export class Expect {
    constructor(actual, helpers, unsubscription) {
        this.actual = actual;
        this.helpers = helpers;
        this.unsubscription = unsubscription;
    }
    toBeObservable(expected, values, error) {
        const { actual, helpers, unsubscription } = this;
        if (typeof expected === "string") {
            helpers.expectObservable(actual, unsubscription).toBe(expected, values, error);
        }
        else {
            assertArgs(expected);
            const { error, marbles, values } = expected[argsSymbol];
            helpers.expectObservable(actual, unsubscription).toBe(marbles, values, error);
        }
    }
    toHaveSubscriptions(expected) {
        const { actual, helpers } = this;
        assertSubscriptions(actual);
        const { subscriptions } = actual;
        helpers.expectSubscriptions(subscriptions).toBe(expected);
    }
}
